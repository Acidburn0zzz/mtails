[[!meta title="Time-based snapshots of upstream APT repositories"]]

[[!toc levels=2]]

Overview
========

XXX: import relevant content from
<https://tails.boum.org/blueprint/freezable_APT_repository/>

Our time-based snapshots of upstream APT repositories are published on
<http://time-based.snapshots.deb.tails.boum.org/>.

These are _full_ snapshots of the upstream APT repositories we use for
building Tails ISO images. They contain exactly the same set of
packages as the mirrored repository. This has the advantage that some
workflows are trivially handled, e.g. working on a topic branch that
installs additional Debian packages; if such snapshots were not full
ones, then to work on one such branch, one would need either that to
have the credentials to import new packages from Debian into our own
mirror or repositories (which raises the barrier for contributing), or
that during some phases of Tails development the regular Debian
archive is used instead of our own mirror, which feels prone to "time
to QA vs. time to release" issues.

We snapshot each upstream APT repository N times a day, and without
further action, each snapshot is kept for D days.

The main goal here is to be able to freeze the APT repositories used
by a branch, whenever we freeze it.

A time-based snapshot's name contains:

 * an identifier of the APT repository this snapshot is about, e.g.
   `debian`, `debian-security`, `torproject`;
 * a `YYYYMMDD$ID` serial, `$ID` being an incremental decimal number
   formatted on two digits (`01`, `02`, etc.).

The APT repository mirroring infrastructure publishes the name of the
latest snapshot for each mirrored repository over HTTP, in the
`project/trace/$archive` file
([example](http://time-based.snapshots.deb.tails.boum.org/debian-security/project/trace/debian-security)).
Similarly, every ISO
build exports the names of the APT repository snapshots it uses
([example](http://nightly.tails.boum.org/build_Tails_ISO_devel/lastSuccessful/archive/latest.iso.apt-sources)).

The corresponding data is not critical: we can restart the whole thing
from scratch if needed, without too much pain â‡’ no need to synchronize
this content to the failover server; no need to back it up.

# Source code

* `tails::reprepro::snapshots::time_based` class in
  [[!tails_gitweb_repo puppet-tails]]
* bits scattered in the main Tails Git repository (details below)

SSH access
==========

One must configure their SSH client to connect to the APT server:

	Host incoming.deb.tails.boum.org
		Port 3003

Workflow
========

<a id="freeze"></a>

Freeze snapshots
----------------

For example, to encode in the `$RELEASE_BRANCH` branch the set of
[[time-based APT repository snapshots|APT_repository/time-based snapshots]]
that shall be used during the freeze:

        git checkout "$RELEASE_BRANCH" && \
        ./auto/scripts/apt-snapshots-serials freeze && \
        git commit \
            -m 'Freeze APT snapshots for ${VERSION}.' \
            config/APT_snapshots.d/*/serial

<a id="thaw"></a>

Thaw snapshots
--------------

For example, to encode in the `$RELEASE_BRANCH` Git branch the fact
that it is not frozen anymore, that is remove the indication that
a specific set of APT repository snapshots must be used:

        git checkout "$RELEASE_BRANCH" && \
        ./auto/scripts/apt-snapshots-serials thaw && \
        git commit \
            -m 'Thaw APT snapshots after Tails $VERSION was released.' \
            config/APT_snapshots.d/*/serial

Bump expiration date
--------------------

We set `Valid-Until` of time-based snapshots 10 days after they are
generated. In some cases, this can be too short, and we need to
manually bump `Valid-Until` for a given time-based snapshot.

Only release managers and sysadmins can do such operations.

### Bump one specific snapshot's expiration date

To bump `Valid-Until`, for a given snapshot (`$SERIAL`) of a given
archive (`$ARCHIVE`), so that they are valid for `$DAYS_FROM_NOW` days
from now:

    ssh reprepro-time-based-snapshots@incoming.deb.tails.boum.org \
       tails-bump-apt-snapshot-valid-until \
           "$ARCHIVE" "$SERIAL" "$DAYS_FROM_NOW"

<a id="bump-expiration-date-for-all-snapshots"></a>

### Bump all snapshots' expiration date

To bump `Valid-Until`, for every snapshot used by the current frozen
`$RELEASE_BRANCH` branch, so that they are valid for `$DAYS_FROM_NOW`
days from now:

	git checkout "$RELEASE_BRANCH" && \
	(
	   cd config/APT_snapshots.d && \
	   for ARCHIVE in * ; do
           if ! grep -qs '^latest$' "$ARCHIVE"/serial; then
               ssh reprepro-time-based-snapshots@incoming.deb.tails.boum.org \
                   tails-bump-apt-snapshot-valid-until \
                       "$ARCHIVE" "$(cat "$ARCHIVE"/serial)" \
                       "$DAYS_FROM_NOW"
           fi
	   done
	)
