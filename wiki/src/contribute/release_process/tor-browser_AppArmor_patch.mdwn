[[!meta title="Upstream our changes to Tor Browser's AppArmor policy"]]

# Preparation (first time)

If you don't have our `torbrowser-launcher` Git repo, clone it:

    git clone tails@git.tails.boum.org:torbrowser-launcher

and add a remote for Debian, which is our immediate upstream:

    git remote add debian https://anonscm.debian.org/git/pkg-privacy/packages/torbrowser-launcher.git

and add a remote for the final upstream:

    git remote add upstream https://github.com/micahflee/torbrowser-launcher

# Make our repo up-to-date

Fetch:

    git checkout master && \
    git pull && \
    git fetch debian && \
    git fetch upstream

Figure our which is the most recent Debian release:

    git show debian/debian/sid:debian/changelog

and set `VERSION` accordingly, e.g.:

    VERSION=0.2.8-2

Finally, make our repo up-to-date:

    TAG="debian/${VERSION}"
    git merge --no-ff "${TAG}"

# Prepare a branch for upstream

Prepare a branch, e.g.:

    UPSTREAM_FEATURE_BRANCH=silence-tor-browser-apparmor-logs
    git checkout -b "${UPSTREAM_FEATURE_BRANCH}" upstream/master

Edit `apparmor/torbrowser.Browser.firefox` accordingly, and commit. Then:

    TAILS_FEATURE_BRANCH=feature/14606-silence-tor-browser-apparmor-logs
    git checkout -b "${TAILS_FEATURE_BRANCH}" origin/master
    git merge "${UPSTREAM_FEATURE_BRANCH}"
    git push -u origin "${UPSTREAM_FEATURE_BRANCH}" "${TAILS_FEATURE_BRANCH}"

Then submit `UPSTREAM_FEATURE_BRANCH` as a pull request to
[upstream](https://github.com/micahflee/torbrowser-launcher/), and
submit `TAILS_FEATURE_BRANCH` for review on the Tails' side.
