[[!meta title="Releasing liveusb-creator"]]

[[!toc levels=1]]

The big picture
===============

Upstream
--------

For this package, "upstream" means, from a Debian packaging
point-of-view, the state of our upstream branches. Let's not pretend we
have not forked liveusb-creator, and admit we are now upstream for our
own version.

The master branch must always be the one that targets current Tails.
That's what we have always done, and right
now master is indeed targeting Wheezy.

But that's not enough, since we also need to put releases out with code
that works on current Debian testing/sid. We maintain several upstream
release branches in parallel, each with their own major version number:

 * for releases that target Wheezy:
   * version = `3.x`
   * tag = `tails-installer_3.x`
 * for work and releases that target Jessie (and, as long as compatible,
   that target testing/sid as well):
   * branch = feature/jessie (that's what we've been doing so far)
   * version = `4.x`
   * tag = `tails-installer_4.x`

Once we can't anymore support both Jessie and testing/sid with the same
codebase, we'll fork a new upstream release branch that target Stretch,
it'll be called feature/stretch, use version 5.x, etc.

Packaging
---------

We're using [DEP-14 conventions](http://dep.debian.net/deps/dep14/),
except for our `master` branch which is used for upstream development
targetted at current Tails, as said above.

* The `pristine-tar` branch contains the binary delta between DFSG-freed
  tarballs and the corresponding tag. It's automatically maintained by
  `gbp import-orig`.
* The `debian/sid` branch is the one we build the package that we upload to
  Debian unstable. The tags on this branch are called `debian/$package_version`,
  which is the default when creating them with
  `gbp buildpackage --git-sign-tags --git-tag-only`;
  in practice this will be something like `debian/4.0+dfsg-1`.
* The `debian/$codename-backports` branch is the one used to prepare packages
  that we upload to the official backports repository for Debian `$codename`.
  E.g. here we want to have `debian/jessie-backports` soon after the initially
  uploaded package reaches Debian testing. The tags on this branch are also called
  `debian/$package_version`. In practice this will be something like
  `debian/4.0+dfsg-1~bpo8+1`.
* The `tails/$codename` branch is the one used to prepare packages that we upload
  to the Tails APT repo, but not to Debian -- e.g. 3.x as currently used on
  Tails/Wheezy will never be uploaded to Debian. It's actually XXX our current debian
  branch, simply renamed to `tails/wheezy`.
* Additionally, we use `tails/$feature branches` for other Tails-specific packaging branches.
* The `upstream/3.x+dfsg`, `upstream/4.x+dfsg`, etc. branches are what we tell `gbp`
  to use as its "upstream" branch.

Topic branches
--------------

In practice, it's expected that Tails contributors submit bugfix and
feature branches forked off master, because they want them part of next
Tails release. Hence, it will happen that code lands into master first,
and in turn into a new 3.x upstream release, before it lands into
`feature/jessie` and in turn into a new 4.x upstream release.

For how to package `bugfix` and `feature`, see
[[the dedicated page|topic_branch]] (probably outdated).

Workflow
========

Generate a new upstream tarball
-------------------------------

The new upstream version should be something like `3.x`, based on the
upstream branch you are building the debian package for:

    export NEW_UPSTREAM_VERSION=3.x
	export UPSTREAM_DEV_BRANCH=master
	git checkout "$UPSTREAM_DEV_BRANCH" && git tag -s "tails-installer_$NEW_UPSTREAM_VERSION"
    git archive \
       --prefix="liveusb-creator-$NEW_UPSTREAM_VERSION/" \
       --output="../tarballs/liveusb-creator_$NEW_UPSTREAM_VERSION.tar.gz" \
       "$UPSTREAM_DEV_BRANCH"

Push branch and tag:

	git push origin "$UPSTREAM_DEV_BRANCH" && \
	git push --tags

Update the Debian package
-------------------------

git checkout the packaging branch, that would be `tails/wheezy` or `tails/jessie` 
for example.

Verify that `gbp.conf` contains the correct upstream and Debian (packaging) branches,
and that `pristine-tar` usage is enabled, i.e.:

	[DEFAULT]
	upstream-branch = upstream/4.x+dfsg
	debian-branch = tails/jessie
	pristine-tar = True

Extract the upstream and packaging branch from gbp.conf:

	export UPSTREAM_BRANCH=`gbp config buildpackage.upstream-branch | sed -r -e 's,.*=,,'` && \
	export PACKAGING_BRANCH=`gbp config buildpackage.debian-branch | sed -r -e 's,.*=,,'`

Create a DFSG free tarball from the previously created Git archive and
reimport it into the source tree. Note that this creates a commit on the
debian-branch specified in gbp.conf, merging the current upstream version
into it.

	mk-origtargz -C ../tarballs \
	 --copy ../tarballs/liveusb-creator_$NEW_UPSTREAM_VERSION.tar.gz
	gbp import-orig \
	 --upstream-vcs-tag="tails-installer_$NEW_UPSTREAM_VERSION" \
	   ../tarballs/liveusb-creator_$NEW_UPSTREAM_VERSION+dfsg.orig.tar.gz

Update `debian/changelog`:

    gbp dch && dch -e

(Do not forget to set the appropriate release.)

Commit the changelog:

    git commit debian/changelog -m "$(head -n 1 debian/changelog | sed -e 's,).*,),')"

Build a new Debian package (use a i386 chroot):

    gbp buildpackage

Add a signed tag to the Git repository and push the changes:

    gbp buildpackage --git-tag-only --git-sign-tags && \
    git push origin "$UPSTREAM_PKG_BRANCH" \
                    "$PACKAGING_BRANCH" \
					pristine-tar && \
    git push --tags

Add the Debian package to Tails
-------------------------------

Sign the package:

    debsign $CHANGES_FILE

Upload:

    dupload --to tails $CHANGES_FILE

Preparing a package for Debian sid
----------------------------------

A maintainer of tails-installer in Debian updates the package in sid accordingly:

* checks out the debian branch
* merges the tails/jessie branch
* bumps version to 4.03+dfsg-1
* builds and uploads to sid
* has gbp create a debian/4.03+dfsg-1 tag

Run `git checkout debian/sid` to switch to the debian packaging branch.

Merge changes from the Tails packaging branch, that would be `tails/jessie`.

Verify that `gbp.conf` contains the correct upstream and Debian (packaging) branches,
and that `pristine-tar` usage is enabled, i.e.:

	[DEFAULT]
	upstream-branch = upstream/4.x+dfsg
	debian-branch = debian/sid
	pristine-tar = True

Extract the upstream and packaging branch from gbp.com:

	export UPSTREAM_BRANCH=`gbp config buildpackage.upstream-branch | sed -r -e 's,.*=,,'` && \
	export PACKAGING_BRANCH=`gbp config buildpackage.debian-branch | sed -r -e 's,.*=,,'`

Update `debian/changelog`:

    git-dch && dch -e

(Do not forget to set the appropriate release, that is bump version to 4.03+dfsg-1).

Commit the changelog:

    git commit debian/changelog -m "$(head -n 1 debian/changelog | sed -e 's,).*,),')"

Build a new Debian package (use a i386 chroot):

    gbp buildpackage

	XXXX.........................
mk-origtargz -C ../tarballs \
	--copy ../tarballs/liveusb-creator_$NEW_UPSTREAM_VERSION.tar.gz
gbp import-orig \
	--upstream-vcs-tag="tails-installer_$NEW_UPSTREAM_VERSION" \
	   ../liveusb-creator_$NEW_UPSTREAM_VERSION+dfsg.orig.tar.gz
	   .........................

	gbp buildpackage --git-tag-only --git-sign-tags && \

Sign and upload the  package to Debian Sid.

Create a tag and push it to our repository.

	git push origin "$UPSTREAM_PKG_BRANCH" \
                    "$PACKAGING_BRANCH" \
					pristine-tar && \
    git push --tags
