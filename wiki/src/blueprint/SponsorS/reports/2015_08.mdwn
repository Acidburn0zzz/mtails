[[!toc levels=2]]

<div class="caution">
<strong>Deadline: 2015-09-05</strong>
</div>

<div class="note">
Deliverable identifiers and descriptions are not free-form: they must
be copy'n'pasted as-is from the proposal sent to the sponsor.
</div>

# A. Replace Claws Mail with Icedove

## A.n. description of subsection

- A.n.m. description of deliverable: ticket numbers

  status summary:

  * what was done
  * what is the outcome (how it makes Tails better)
  * what was not done, and why

# B. Improve our quality assurance process

## B.1. Automatically build ISO images for all the branches of our source code that are under active development

- B.1.9. Deploy, refresh our Jenkins jobs regularly

  After our code freeze for Tails 1.5, we realized that there was
  a bug in our algorithm that detects what Git branch should be built
  on Jenkins ([[!tails_ticket 9925]]). We promptly worked around the
  problem initially, to not interfere with the release management work.
  And then, a proper fix was implemented and deployed.

## B.2. Continuously run our entire test suite on all those ISO images once they are built

- B.2.1. Adjust our infrastructure to run tests in parallel
  ([[!tails_ticket 9645 desc="#9645"]], [[!tails_ticket 9486 desc="#9486"]])

  All the isotesters we planned to deploy (four of them) are now live, and
  our test suite developpers have access to it to run the test suite on
  them. They are connected to our Jenkins master, but do not have jobs
  running on them yet. Our puppet modules have been adapted for their
  deployment.

  The test suite is actually run by hand regulary to see how it behaves
  and how our system can cope with it.

  We still need to automate this runs through Jenkins to have good
  statistics. It will also help use to have an idea about whether we need
  to fire a up a clean test VM before each test suite run. Ideas to
  implement this have already been researched and discussed.

- B.2.2. Decide what kind of ISO images qualify for testing and when,
  how to process, advertise, and store the results
  ([[!tails_ticket 8667 desc="#8667"]])

  The discussion has reached its end, and the draft of the blueprint is
  now done.
  Now that this step is completed, we have a clear design and we know what
  will need to be done to deploy our automated test suite.

# C. Scale our infrastructure

## C.4. Maintain our already existing services

This covers "C.4.3. Administer our services upto milestone III" until
the end of August.

- We fixed the "reboot required" notifications on our Jessie and
  newer systems. The corresponding Puppet code was proposed upstream.
- We started adapting our Puppet code to migrate to Gitolite v3
  [[!tails_ticket 10093]].
- We experimented with <http://httpredir.debian.org>, with limited
  success so far. It should improve with the version of APT that will
  ship in Debian 9 (Stretch).
- We deployed to pre-production a meeting reminder system that should
  be more robust ([[!tails_ticket 9172]]).
- We converted some obsolete service management we had to systemd.

# D. Migration to Debian Jessie


# E. Release management
