[[!meta title="Tails March 2016 report"]]

[[!toc levels=2]]

<div class="caution">
<strong>Deadline: 2016-04-08</strong>
</div>

<div class="note">
Deliverable identifiers and descriptions are not free-form: they must
be copy'n'pasted as-is from the proposal sent to the sponsor.
</div>

[Last month's activity on Redmine](https://labs.riseup.net/code/projects/tails/issues?query_id=208)
can be helpful.

This reports covers the activity of Tails in March 2016.

Everything in this report can be made public.

# A. Replace Claws Mail with Icedove

- A.1.1 Secure the Icedove autoconfig wizard: #6154

Now that we've adapted Thunderbird to use the automatic email creation wizard again, we also needed to adjust some settings in Torbirdy, in order to benefit from both. We've made a lot of progress on adapting Torbirdy's code (#11204) and have sent the [modifications upstream] (https://github.com/ioerror/torbirdy/pull/30).

# B. Improve our quality assurance process

## B.3. Extend the coverage of our test suite

### B.3.11. Fix newly identified issues to make our test suite more robust and faster

- Robustness improvements

  XXX: anonym

- Performance improvements on Jenkins

  Last month, we started optimizing the platform that runs our test
  suite to make it run faster. As planned, in March we came back to
  it, and measurements showed that real workloads indeed benefit from
  these changes ([[!tails_ticket 11175]], [[!tails_ticket 11113]]).

## B.4. Freezable APT repository

In summary, we now have a working proof-of-concept for all essential pieces of
infrastructure and code, except some bits of the "tagged snapshots" component
(that is kind of bonus material for the time being, and is not needed to achieve
the goals we have set about this deliverable this year).

The progress we made in March matches the updated development schedule that we
shared in [[last month's report|contribute/reports/SponsorS/2015/2016_02]], and
the goals we have set back then still seem realistic.

Now, into the details:

- B.4.1. Specify when we want to import foreign packages into which APT suites ([[!tails_ticket 9488]])
  and B.4.4. Design freezable APT repository ([[!tails_ticket 9487]])

  We [discussed](https://mailman.boum.org/pipermail/tails-dev/2016-March/010369.html)
  our current proposed design and validated it. Proof-of-concept implementations
  also confirm the soundness of large parts of this design, so we now consider
  these two deliverables as done.

- B.4.2. Implement a mechanism to save the list of packages used at ISO build time ([[!tails_ticket 10748]])

  We made great progress on this front. We added support for storing the
  architecture information about packages used at build time, in preparation for
  (unrelated) upcoming changes that will make the Tails build process fetch
  packages for multiple architectures. We made our code and design evolve a bit
  after more intensive testing that highlighted a few problems.

  Some polishing remains to be done, but we are happy with how this component
  now works. We still aim at having this work merged in April, ideally in time
  for Tails 2.3 (which will require an exception since this release is
  a bugfix-only one).

  This will allow us to store (virtually forever) all packages needed to build
  a given Tails release.

XXX:intrigeri:

- B.4.3. Centralize and merge the list of needed packages

  This deliverable doesn't make sense, as-is, in our current design. It is
  replaced by processes and tools that our release managers can use to:

  * keep around the APT snapshots we need for a longer time than the default,
    e.g. the ones used during a longer than usual Tails code freeze, and prevent
    them from being deleted by our garbage collector;

  * freeze and thaw time-based APT snapshots used by a branch.

  The corresponding programs were drafted
  (<https://git-tails.immerda.ch/tails/tree/auto/scripts/apt-snapshots-serials?h=feature/build-from-snapshots>,
  <https://git-tails.immerda.ch/puppet-tails/tree/files/reprepro/snapshots/time_based/tails-bump-apt-snapshot-valid-until>)
  and passed early testing. We will now document their usage as part of the
  Tails release process documentation.

- B.4.5. Implement processes and tools for importing and freezing those packages

  Time-based snapshots are now generated four times a day, and
  [published over HTTP](http://time-based.snapshots.deb.tails.boum.org/).
  We designed how to do garbage collecting of these snapshots, and have a draft
  implementation
  (<https://git-tails.immerda.ch/puppet-tails/tree/files/reprepro/snapshots/time_based/tails-delete-expired-apt-snapshots>).
  This infrastructure is described with, and managed by, Puppet:
  <https://git-tails.immerda.ch/puppet-tails/tree/manifests/reprepro>

  We have successfully built a Tails ISO image using time-based APT snapshots:
  [[!tails_gitweb_branch feature/build-from-snapshots]]! This was a great
  success for us, as it allowed us to validate a large chunk of our previous
  work in a production context.

  This lead us to identify that if we didn't do anything about it, the
  `apt-cacher-ng` caching proxy used for building Tails ISO images, that
  improves build speed a lot, would not only be rendered inefficient, but would
  also consume quickly growing amount of disk space. It took us some time but we
  now have a proof-of-concept solution for that problem. Next step on this front
  is to .

- B.4.6. Adjust the rest of our ecosystem to the freezable APT repository ([[!tails_ticket 6303]])

  We investigated more closely what exact changes remain to be done, adjusted
  our backup system, and ensured that our plans for a fail-over system already
  take into account the needs of our upcoming freezable APT repository.

  What remains to be done (purchasing a hard-drive for an additional set of
  backups) is minor and not blocking, so we can consider this deliverable as
  basically done at this point.

# C. Scale our infrastructure

## C.1. Change in depth the infrastructure of our pool of mirrors

## C.4. Maintain our already existing services

We kept on answering the requests from the community as well as taking
care of security updates as covered by "C.4.5. Administer our services
up to milestone V".

* We upgraded to Debian 8 (Jessie) all the Debian 7 (Wheezy) systems
  we were still running ([[!tails_ticket 11178]],
  [[!tails_ticket 11186]]). This fixed a bug that prevented us to
  upgrade the Linux kernel running on all our ISO tester virtual
  machines ([[!tails_ticket 9157]]).

XXX: intrigeri

# D. Migration to Debian Jessie


# E. Release management
