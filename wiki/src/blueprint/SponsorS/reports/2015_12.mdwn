[[!meta title="Tails December 2015 report"]]

[[!toc levels=2]]

<div class="caution">
<strong>Deadline: 2016-01-05</strong>
</div>

<div class="note">
Deliverable identifiers and descriptions are not free-form: they must
be copy'n'pasted as-is from the proposal sent to the sponsor.
</div>

[Last month's activity on Redmine](https://labs.riseup.net/code/projects/tails/issues?query_id=208)
can be helpful.

This reports covers the activity of Tails in December 2015.

Everything in this report can be made public.

# A. Replace Claws Mail with Icedove

## A.1.1 Secure the Icedove autoconfig wizard

   We've been evaluating our own patches for Icedove against those
   reported to Mozilla's bugtracker and are happy to announce that our
   patches would provide an option to accept only secure protocols, as
   a user opt-in. These patches will be submitted to Mozilla's bugtracker
   - and hopefully integrated upstream.
   ([[!tails_ticket 7064]])

## A.1.2 Make our improvements maintainable for future versions of Icedove
   We've been following up on upstreaming patches from tagnaq's paper
   and are happy to see that two of them were included upstream
   ([[!tails_ticket 6150]])
   * Date headers are sanitized with a JS patch in torbirdy: 
     https://trac.torproject.org/6314
   * Message-ID headers are fixed with a C++ patch in Thunderbird 45: 
     https://hg.mozilla.org/comm-central/rev/a8573d4c67292962f9dd9b8f51496e9f62bbedb7

  Unfortunately we also discovered that Icedove's autoconfig wizard does
  not always use the configured proxy. This means, that some traffic leaks.
  However, in Tails we drop non-Tor traffic by default, but we think that
  it's important to provide a patch for this bug and started to write a 
  PoC.

  In order to make our improvements maintainaible we've furthermore gotten
  in touch with the Debian Icedove packaging team and writen manual tests for 
  user who help test Icedove in Tails.
  ([[!tails_ticket 9493]])
  These will still be converted to automated tests for our test suite.

## A.1.3 Integrate Icedove into Tails
   Since 1.8 we advertise Icedove to our users over Claws Mail.
   Users may now use persistence with Icedove.

# B. Improve our quality assurance process

## B.1. Automatically build ISO images for all the branches of our source code that are under active development

In December, **809 ISOs** were automatically built by our Jenkins
instance.

## B.2. Continuously run our entire test suite on all those ISO images once they are built

In December, **788 ISOs** were tested by our Jenkins instance.

- B.2.4. Implement and deploy the best solution from this research

  We implemented our decision regarding documentation branches and
  automated tests. They are now tested only against scenarios that
  depends on the documentation shipped in Tails and not the whole test
  suite, which help in reducing the load on the isotesters.
  ([[!tails_ticket 10492]], [[!tails_ticket 10706]] and [[!tails_ticket 10707]])

  We also excluded work in progress branches from being automatically
  tested in Jenkins, as their meaning is to share work that is not yet
  ready to be merged and they may break the tests, thus avoiding
  to notify authors that already know very well that their branch is
  not reliable yet. ([[!tails_ticket 10389]])

  To save a bit of disk space that we need for later work (e.g freezable
  APT repo), we reduced the temporary partitions used by our isotesters
  after evaluating what they really use. ([[!tails_ticket 10396]])

  We also had a look to check after a whole release cycle if the saving
  of video artifacts for failing scenarios wasn't using too much disk
  space, and concluded it was fine. ([[!tails_ticket 10354]])

  We also fixed a usability issue where the unmerged branches were
  removed from the list of branches to be automatically built and tested
  after each releases, resulting in loosing their automatic build and
  test history. ([[!tails_ticket 10123]])

  We finally unleashed the automated tests failure notifications to
  branches authors, as there were now much less false positives.
  ([[!tails_ticket #10296]] and [[!tails_ticket 10382]])

## B.3. Extend the coverage of our test suite

* B.3.11. Fix newly identified issues to make our test suite more robust and faster

During December,

  - We fixed several fragile scenarios:
    Seahorse ([[!tails_ticket 10501]] and ([[!tails_ticket 9095]])
    Whois ([[!tails_ticket 10523]])
    Tails installer ([[!tails_ticket 10718]])

  - Some fragile scenarios have been worked on and have a proposed fix:
    Tails OpenPGP keys, by updating the soon to be expired one
    ([[!tails_ticket 10378]])
    Git ([[!tails_ticket 10444]]))

  - We also identified other scenarios that were fragile in Jenkins:
    MAC address spoofing ([[!tails_ticket 10774]])
    Evince ([[!tails_ticket 10775]])
    Memory wipe ([[!tails_ticket 10776]])
    Race condition with boot splash ([[!tails_ticket 10777]])
    Opening Tails roadmap URL from pidgin ([[!tails_ticket 10783]])
    Due to the `wait_until_tor_is_working` helper being buggy
    ([[!tails_ticket 10497]]), we marked most network related scenarios
    as fragile.

We also rescheduled the timeline we'll work on fixing the fragile
scenarios we've identified.

## B.4. Freezable APT repository

- B.4.5. Implement processes and tools for importing and freezing
  those packages ([[!tails_ticket 10749]], [[!tails_ticket 10748]],
  [[!tails_ticket 6299]]),
  B.4.2. Implement a mechanism to save the list of packages used at
  ISO build time ([[!tails_ticket 6297]])

  Some more code was written and reviewed. A few potential issues were
  identified and are being discussed within the team.

- B.4.6. Adjust the rest of our ecosystem to the freezable APT
  repository

  We started an evaluation of the hardware resources required by our
  draft design ([[!tails_ticket 6295]]).

# C. Scale our infrastructure

## C.2. Be able to detect within hours failures and malfunction on our services

We had to reschedule our plans on this front, as the Jenkins deliverable
took some more of our time, as well as the Tails 1.8.1 emergency
release.

We already started to deploy locally on a developer machine a prototype
setup using puppet to get an idea of how the chosen solution can be
deployed, and how compatible it is with our setup.

We plan to go on deploying this prototype until the 2.0 release, as
well as finishing the installation of the VM that will host this
service, which means deciding how we'll handle its puppet configuration.
We'll then start to implement it in production during the 2.2 release
cycle.

## C.4. Maintain our already existing services

We kept on answering the requests from the community as well as taking
care of security updates as covered by "C.4.4.  Administer our services
up to milestone IV" until the end of December.

We also had a sysadmin sprint in the middle of December, but most of it
was sadly spent working on the Tails 1.8.1 emergency release.

# D. Migration to Debian Jessie

## D.2. Take advantage of systemd to improve the internals of Tails

We polished code that was previously ported to systemd:

* Fixed `tor-has-bootstrapped` semantics on network reconnect
  ([[!tails_ticket 10732]]).

## D.3. Update our test suite for Tails Jessie

We have updated most of the test suite for Jessie ([[!tails_ticket 7563]]).

Some new test suite robustness problems are left to be addressed, but
the current state was good enough to make us feel comfortable
releasing Tails 2.0~beta1. Besides, we are happy to point out that
this automated test suite made us discover quite a few bugs in
Jessie-based Tails development versions, that we would probably not
have noticed before the first beta release otherwise.

Here is the list of relevant tickets that were resolved during the
reporting period (most of the test suite porting work was done
directly in Git, without filing tickets for each bit that needed to be
adjusted, though):

* Dropped an obsolete test case ([[!tails_ticket 10336]]).
* Disabled screen blanking during the test suite, it breaks some tests ([[!tails_ticket 10403]]).
* Updated the tests for communication with OpenPGP keyservers ([[!tails_ticket 9791]]).
* Replaced our previous iptables status regexp-based parser with a new
  XML-based status analyzer: the previous implementation could not be
  adjusted to the new ip6tables' output ([[!tails_ticket 9704]]).
* Updated the "all notifications have disappeared" test suite step for
  Jessie ([[!tails_ticket 8782]]).

## D.4. Document the changes implied by the move to Jessie on our website

XXX

## D.5. Release an official version of Tails based on Jessie

On December 22 we published a first beta for the upcoming Tails 2.0,
based on Debian Jessie: <https://tails.boum.org/news/test_2.0-beta1/>.
It was very useful so far: we received a lot of feedback, including
a few bug reports. Most of these bugs were fixed since then, but that
will be for next report round :)

The first release of Tails based on Debian Jessie is still scheduled
for January 26.

## Various porting to Jessie

A lot of other porting to Jessie work was done, that does not really
fit into any of the above categories:

* Install Electrum 0.2.5.x in Tails/Jessie ([[!tails_ticket 10754]]).
* Fixed obfs4proxy support ([[!tails_ticket 10724]]).
* Fixed time synchronization in bridge mode when the clock is way off
  ([[!tails_ticket 10696]]).

# E. Release management
