[[!toc levels=2]]

<div class="caution">
<strong>Deadline: 2015-11-05</strong>
</div>

<div class="note">
Deliverable identifiers and descriptions are not free-form: they must
be copy'n'pasted as-is from the proposal sent to the sponsor.
</div>

This reports covers the activity of Tails in October 2015.

Please keep in mind that this report is public.

Note: the numbers preceded with a `#` correspond to tickets in our bug
tracker which contains more technical details and timeline. For example,
ticket #6938 can be seen on <https://labs.riseup.net/code/issues/6938>.

# A. Replace Claws Mail with Icedove

## A.n. description of subsection

  - A.1.2. Make our improvements maintainable for future versions of Icedove

  - A.1.3. Integrate Icedove into Tails

    We configured Icedove in Tails to match our security goals (#6151),
    as part of this we disabled:

      - The remote email account feature (#10009)
      - The automatic add-on updates (#10428)

  - A.1.4. Provide a migration path for our users from Claws Mail to Icedove

    We studied the most common Claws Mail persistence configuration
    (#9494, #5663), then provided a [[script|misc/claws_to_icedove.sh]]
    (#10453) to migrate POP mailboxes to Icedove and wrote [[migration
    instructions|doc/anonymous_internet/claws_mail_to_icedove]] (#9495)
    for users to migrate their mailboxes, email account settings, and
    address books.

    To make this migration easier to users, we enabled automatically the
    Icedove persistence feature when the Claws Mail persistence was
    enabled (#9498) and add the `nmh` package to Tails.

  - A.1.5. Update Icedove documentation

    The previous Thunderbird documentation was [[completely
    rewritten|doc/anonymous_internet/icedove]]. (#7158)

  - A.1.6. Release Icedove in Tails

    Icedove has been added to Tails 1.7. (#10285)

    It is advertised as a technology preview in our [[release
    notes|news/version_1.7]]. We want to have some more advanced users
    testing our configuration and the migration process before making
    Icedove the default email client and removing Claws Mail.

# B. Improve our quality assurance process

## B.2. Continuously run our entire test suite on all those ISO images once they are built

- B.2.3. Design a solution to generate a set of Jenkins jobs
  to run tests.

Early in October we finally settled to the best option we found to
reboot the VM between each run of the test suite in Jenkins (#9486).

We also experimented with the sharing of artifacts between the build jobs
and their related test jobs, so that the later would have access to the
automatically build ISO and concluded our deployment was functionnal. (#9597)

We had to upgrade our jenkins-job-builder setup to the new 1.3.0 version
that was uploaded into Debian. It appeared that it was necessary to be
able to configure some Jenkins plugins in our test jobs. (#9646)

We also pushed upstream a patch to handle the CucumberTestResult Jenkins
plugin, so that we can use it easily in our setup ans have a nice diplay of
cucumber reports. It has been merged and will be released with
jenkins-job-builder 1.4.0.
https://review.openstack.org/#/c/218668/

We worked together with the test suite team on getting video artifacts
stored along this others for failing scenarios of a test job. (#10154)

With all this, we were able to deploy automated tests of ISO build
automatically for our main release branches at the end of the first week of
October, which helped us to confirm our design was working. (#10117)

- B.2.4. Deploy the best solution from this research.

With this first initial and limited deployment, we corrected some tiny
configuration details we didn't catch during the design step. (#10215, #10417)

We stumbled upon a bug due to hardware or kernel troubles with nested
virtualization we had to workaround. (#10229)

It also helped in fixing some issues in the interaction of our test
suite code once deployed in Jenkins. (#10356, #10359)

- B.2.5. Write library code that maps Jenkins jobs from building to testing.

Now that we had a good example of how to write a test job in our
jenkins-job-builder setup, triggered by its upstream build job, we
adapted our code that generates active branches build jobs to also
output their corresponding test jobs. We also ended up using the power
of a more recent jenkins-job-builder version to simplify in great length
this code. (#10118, #10119)

It was already clear that we wouldn't be able to notify the committers
at first, as the number of failures were too high and we didn't want to
encourage them not to read this notifications.
So we planned a first iteration were only the test suite team would
receive them, so that they'll be able to work on the remaining tests
being too fragile. (#10287)

By October 15th, we had the automated test deployed live in Jenkins for
all active branches.
However, we quickly understood that some of our branches were too old to
run correctly the test suite in Jenkins, given the intense development
there were at that moment. We had to deactivate the automated tests for
branches that were based on our stable branch, mainly branches meant to
work on the website and the documentation. Other feature or bugfix
branches were still automatically tested. This situation is only
temporary, and the deactivated branches will be reactivated when our
stable branch will get all the necessary updates, which happens with
the 1.7 release.

We're also discussing in our public mailing list if it makes sense to
run our whole test suite on such documentation branches or not.

#### B.3. Extend the coverage of our test suite

  - B.3.5. Write tests for I2P

  Finished late, part of Milestone II (July 15, 2015). (#6306)

  - B.3.6. Fix newly identified issues to make our test suite more robust
           and fast enough to be part of a continuous integration process.

    A plan was devised to leverage out automated testing
    infrastructure for identifying the robustness issues and isolating
    them into separate branches, where they can be dealth with in
    isolation. (#10288)

    Other improvements:

    * The new snapshot system improved robustness noticeably, and
      reduced the amount of time needed for a full run with at least
      30%. (#6094)

    * Restart Tor if bootstrapping stalls for too long.

      This started out as a robustness improvement in the test suite,
      since many tests failed randomly due to Tor. We then implemented
      it as a feature in Tails, since it arguably should improve the
      user experience too (#9516).

  - B.3.9. Optimize tests that need a persistent volume

    The new snapshot system was finished early (part of Milestone IV,
    January 15, 2015). (#6094, #8008)

  - B.3.13. Split the "various checks" feature

    Started early, but not finished; so far only mat.feature and
    localization.feature has been created from split out
    scenarios. Thanks to #6094 the remainder of this wokr will be
    trivial.

  - Some other new tests that were written:

    * Write initial Icedove tests. (#10332)

    * Write a test for the fix of a symlink attack. It was added at
      the same time as the fix, and this is the ideal workflow we hope
      to soon be ready to adopt. (#10333)

  - Some improvements for test suite developers:

    * Organize automated test suite artifacts in per-run directories,
      and improve the naming so it's easier to see e.g. which video
      belongs to which failed scenario. (#10151)

    * Clean up automated test suite dependencies. (#10208)

    * Force UTF-8 locale in automated test suite, so the system can
      run which locale it wishes. (#10359)

    * Run the automated test suite's VNC server forever Test suite.
      (#10345)

    * Don't print test suite information to STDERR, but use the
      Cucumber logging facilities so this information is included when
      logging to file. (#10342)

# C. Scale our infrastructure

- C.4.3. Administer our services upto milestone III

We kept on answering to the request from the community as well as taking
care of security updates.
We had to reinstall one of our ISO builder VM that was failing too
often. (#10334)
The GnuPG key of our Debian repository was going to expire, so we had to
update it. (#10419)
We thought a bit further how we could make our Jenkins instance public
(#6270) which probably means to update to the upstream version. (#10068)

# D. Migration to Debian Jessie

### D. Migration to Debian Jessie

  - D.3.1 Update our test suite for Tails Jessie

    * Fix memory erasure tests in Debian Jessie. (#8317, #9705)

    * Work around screen blanking when testing Synaptic. (#10403)

    * Fix a robustness issue with the "Applications" menu
      handling. (#9706)
