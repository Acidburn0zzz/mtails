#!/bin/bash
set -e
set -u

set -o pipefail

BASE_URL=http://time-based.snapshots.deb.tails.boum.org/
CONFIG=config/APT_snapshots.d
SERIAL_ONLY=
APT_SNAPSHOT_SERIAL=
FREEZE_EXCEPTIONS=debian-security

get_latest_serial() {
	origin=$1
	wget -q $BASE_URL/$origin/project/trace/$origin -O - \
		| awk -F': ' '/^Archive serial: / {print $2}'
}

if [ $# -eq 0 ]; then
	action="cat"
	ORIGINS="$(cd ${CONFIG}; ls -d *)"
else
	action="${1}"
	shift
	if [ "${1:-}" = --print-serials-only ]; then
		SERIAL_ONLY=yes
		shift
	fi
	if [ "${1:-}" = --freeze-debian-security ]; then
		FREEZE_EXCEPTIONS=
		shift
	fi
	if [ "$action" = "prepare-build" ]; then
		if [ $# -eq 1 ]; then
			APT_SNAPSHOT_SERIAL="${1}"
			shift
		fi
	fi
	if [ $# -eq 0 ]; then
		ORIGINS="$(cd ${CONFIG}; ls -d *)"
	else
		ORIGINS="${@}"
	fi
fi

case "$action" in
	cat)
		for origin in $ORIGINS; do
			[ -z "${SERIAL_ONLY}" ] && echo -n "$origin: "
			cat "$CONFIG/$origin/serial"
		done
	;;
	cat-json)
		$(dirname "$0")/apt-snapshots-serials-cat-json "$CONFIG"
	;;
	get-latest)
		for origin in $ORIGINS; do
			[ -z "${SERIAL_ONLY}" ] && echo -n "$origin: "
			get_latest_serial $origin
		done
	;;
	freeze)
		for origin in $ORIGINS; do
			serial_file="$CONFIG/$origin/serial"
			git=$(cat $serial_file)
			case "$origin" in
				${FREEZE_EXCEPTIONS})
					new=latest
					;;
				*)
					new=$(get_latest_serial $origin)
			esac
			printf "Origin $origin:\n  old: $git\n  new: $new\n"
			echo $new > $serial_file
		done
		printf "\nAll files ($CONFIG/*/serial) have been updated with new serials\n" >&2
	;;
	thaw)
		for origin in $ORIGINS; do
			serial_file="$CONFIG/$origin/serial"
			git=$(cat $serial_file)
			printf "Origin $origin:\n  old: $git\n  new: latest\n"
			echo 'latest' > $serial_file
		done
	;;
	prepare-build)
		rm -rf tmp/APT_snapshots.d
		mkdir -p tmp
		cp -r config/APT_snapshots.d tmp/
		if [ "${APT_SNAPSHOT_SERIAL}" ]; then
			$(dirname "$0")/apt-snapshots-serials-load-json \
				"$APT_SNAPSHOT_SERIAL" \
				> tmp/cached_APT_snapshots_serials
		else
			$0 get-latest > tmp/cached_APT_snapshots_serials
		fi
		for origin_dir in tmp/APT_snapshots.d/*; do
			origin=$(basename $origin_dir)
			if grep -qs '^latest$' $origin_dir/serial; then
				awk -F': ' "/^$origin: / {print \$2}" \
					tmp/cached_APT_snapshots_serials \
					> $origin_dir/serial
			fi
		done
	;;
	*)
		printf "unknown action ($action), use either 'cat', 'get-latest', 'prepare-build', 'freeze' or 'thaw'\n" >&2
		exit 1
	;;
esac
