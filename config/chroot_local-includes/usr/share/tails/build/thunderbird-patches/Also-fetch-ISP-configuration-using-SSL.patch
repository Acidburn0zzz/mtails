From d92fb58922f0abd9f1b7f27b0506a146b49a6a98 Mon Sep 17 00:00:00 2001
From: anonym <anonym@riseup.net>
Date: Wed, 27 Feb 2019 10:14:20 +0100
Subject: [PATCH] Also fetch ISP configuration using SSL.

Now we support ISPs who only serve .well-known over SSL.

This also increases defenses against eavesdroppers somewhat (who could
snoop your username [0]), but for active attackers the "downgrade"
attack that forces plaintext is trivial: just block all SSL
traffic. So a Man-in-the-middle still gets full control over the
client configuration.

It would be reasonable to only do SSL by default, but it is not an
option in certain enterprise deployments, so instead we allow
security-focused distributions (and extensions like TorBirdy) to
control the behavior via a new boolean pref:

    mailnews.auto_config.ssl_only_config_servers

When set to true ISP fetches are done using SSL only, but it defaults
to false which allows insecure fetches as well.

[0] See the mailnews.auto_config.fetchFromISP.sendEmailAddress pref.
---
 .../accountcreation/content/fetchConfig.js         | 32 +++++++++++-----------
 comm/mailnews/mailnews.js                          | 13 ++++++---
 2 files changed, 25 insertions(+), 20 deletions(-)

--- a/comm/mail/components/accountcreation/content/fetchConfig.js
+++ b/comm/mail/components/accountcreation/content/fetchConfig.js
@@ -65,11 +65,16 @@ function fetchConfigFromISP(domain, emai
     return new Abortable();
   }
 
-  let url1 = "http://autoconfig." + sanitize.hostname(domain) +
-             "/mail/config-v1.1.xml";
+  let conf1 = "autoconfig." + sanitize.hostname(domain) +
+              "/mail/config-v1.1.xml";
   // .well-known/ <http://tools.ietf.org/html/draft-nottingham-site-meta-04>
-  let url2 = "http://" + sanitize.hostname(domain) +
-             "/.well-known/autoconfig/mail/config-v1.1.xml";
+  let conf2 = sanitize.hostname(domain) +
+              "/.well-known/autoconfig/mail/config-v1.1.xml";
+  // This list is sorted by priority
+  var urls = ["https://" + conf1, "https://" + conf2];
+  if (!Services.prefs.getBoolPref("mailnews.auto_config.ssl_only_config_servers")) {
+    urls.push("http://" + conf1, "http://" + conf2);
+  }
   let callArgs = {
     urlArgs: {
       emailaddress: emailAddress,
@@ -85,18 +90,13 @@ function fetchConfigFromISP(domain, emai
   let priority = new PriorityOrderAbortable(
       xml => successCallback(readFromXML(xml)),
       errorCallback);
-
-  call = priority.addCall();
-  fetch = new FetchHTTP(url1, callArgs,
-      call.successCallback(), call.errorCallback());
-  call.setAbortable(fetch);
-  fetch.start();
-
-  call = priority.addCall();
-  fetch = new FetchHTTP(url2, callArgs,
-      call.successCallback(), call.errorCallback());
-  call.setAbortable(fetch);
-  fetch.start();
+  for (let url of urls) {
+    call = priority.addCall();
+    fetch = new FetchHTTP(url, callArgs,
+        call.successCallback(), call.errorCallback());
+    call.setAbortable(fetch);
+    fetch.start();
+  }
 
   return priority;
 }
--- a/comm/mailnews/mailnews.js
+++ b/comm/mailnews/mailnews.js
@@ -898,16 +898,21 @@ pref("mailnews.auto_config_url", "https:
 pref("mailnews.mx_service_url", "https://live.thunderbird.net/dns/mx/");
 // The list of addons which can handle certain account types
 pref("mailnews.auto_config.addons_url", "https://live.thunderbird.net/autoconfig/addons.json");
-// Allow to contact ISP (email address domain)
-// This happens via insecure means (HTTP), so the config cannot be trusted,
-// and also contains the email address
+// Whether to contact the ISP (email address domain).
+// This may happen via insecure means (HTTP) susceptible to eavesdropping and MitM.
 pref("mailnews.auto_config.fetchFromISP.enabled", true);
-// Allow the fetch from ISP via HTTP, but not the email address
+// Whether we tell the ISP our username. Note that the username will
+// leak in plaintext if a non-SSL fetch is performed.
 pref("mailnews.auto_config.fetchFromISP.sendEmailAddress", true);
 // Allow the Microsoft Exchange AutoDiscover protocol.
 // This also sends the email address and password to the server,
 // which the protocol unfortunately requires in practice.
 pref("mailnews.auto_config.fetchFromExchange.enabled", true);
+// Whether we will only allow SSL channels when fetching.
+// When false an active attacker can block non-SSL fetches and then
+// MitM the HTTP fetch, granting the attacker full control over the
+// client configuration.
+pref("mailnews.auto_config.ssl_only_config_servers", false);
 // Whether we will attempt to guess the account configuration based on
 // protocol default ports and common domain practices
 // (e.g. {mail,pop,imap,smtp}.<email-domain>).
