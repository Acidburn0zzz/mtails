#!/usr/bin/env python3

import sys
import os
import logging

from tails_server import argument_parser
from tails_server import config
import tails_server.services

service_names = tails_server.services.service_names
service_module_paths = tails_server.services.service_module_paths
service_modules_dict = tails_server.services.import_service_modules()


def list_services():
    for service in service_names:
        print("-", service)


def list_enabled():
    enabled_services = [module.service for module in service_modules_dict.values() if
                        module.service.is_running]
    for service in enabled_services:
        print("-", service.name)


def init(args):
    if args.verbose:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)
    logging.debug("args: %r", args)


def exec_service(args):
    service_script_path = os.path.join(config.SERVICES_DIR, args.SERVICE)
    service_module_path = service_module_paths[args.SERVICE]
    del args.SERVICE
    print("service_module_path: %r" % service_module_path)
    os.execv(service_module_path, [service_module_path] + sys.argv[1:-1])


def main():
    args = argument_parser.WrapperParser().parse_args()
    init(args)

    if args.command == "list":
        list_services()
    elif args.command == "list-enabled":
        list_enabled()
    else:
        if os.geteuid() != 0:
            exit("This command requires root")
        exec_service(args)


if __name__ == "__main__":
    main()