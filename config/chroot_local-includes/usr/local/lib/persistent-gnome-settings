#!/usr/bin/env python3

import subprocess
import logging
import os

SETTINGS_FILE_NAME = "gnome-settings.conf"

SETTINGS = {
    # If the path is a directory, it must end with a '/'
    "Favorite Apps": "/org/gnome/shell/favorite-apps",
    "Desktop Background": "/org/gnome/desktop/background/",
    "Mouse & Touchpad Settings": "/org/gnome/desktop/peripherals/mouse/",
}

logging.basicConfig(level=logging.DEBUG)


def get_persistence_mountpoint() -> str:
    candidates = ['/live/persistence/TailsData_unlocked', '/media/%s/TailsData' % os.environ['USER']]
    for mountpoint in candidates:
        if os.path.exists(mountpoint):
            return mountpoint
    raise Exception("Couldn't find persistence mountpoint")


def main():
    persistence_mountpoint = get_persistence_mountpoint()
    settings_file = os.path.join(persistence_mountpoint, SETTINGS_FILE_NAME)
    persistent_settings = list()
    try:
        with open(settings_file) as f:
            persistent_settings = f.read().splitlines()
    except FileNotFoundError:
        # The file will be created below
        pass

    command = ["zenity",
               "--list",
               "--checklist",
               "--column=Persist",
               "--column=Setting"]
    for title, setting in SETTINGS.items():
        is_persistent = setting in persistent_settings
        command += [str(is_persistent), title]
    logging.debug("command: %s", " ".join(command))

    p = subprocess.run(command, check=True, capture_output=True)
    logging.debug("stdout: %s", p.stdout)

    titles = p.stdout.decode().strip().split('|')
    with open(settings_file, 'w+') as f:
        f.write("\n".join(SETTINGS[title] for title in titles) + "\n")


if __name__ == "__main__":
    main()
