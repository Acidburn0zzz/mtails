commit 85af45f3c5cf10ec60f1301169ee94ac978c5b69
Author: Yann Amar <quidame@poivron.org>
Date:   Fri May 5 16:12:24 2017 +0000

    bilibop-common: re-add support for multiple aufs readonly branches.
    
    This partially reverts commit 03a49203.

diff --git a/lib/bilibop/common.sh b/lib/bilibop/common.sh
index 9f91478..4017726 100644
--- a/lib/bilibop/common.sh
+++ b/lib/bilibop/common.sh
@@ -490,24 +490,31 @@ underlying_device_from_loop() {
 # branch of an aufs mountpoint given as argument. We assume that there is only
 # and at least one physical device used to build the aufs (but the directory
 # is not necessarly the mountpoint of this device), other branch(s) being
-# virtual fs.
+# virtual fs. Note that if there are more than one readonly branch, the first
+# block device found wins.
 underlying_device_from_aufs() {
     ${DEBUG} && echo "> underlying_device_from_aufs $@" >&2
-    local   dir="$(aufs_readonly_branch "${1}")"
-    local   dev="$(device_id_of_file "${dir}")"
-    case "${dev}" in
-        "")
-            ;;
-        0:*)
-            # aufs mounts can't be nested; but this may be btrfs
-            dev="$(underlying_device_from_file "${dir}")"
-            ;;
-        *)
-            dev="$(device_node_from_major_minor "${dev}")"
-            ;;
-    esac
-
-    [ -b "${dev}" ] && readlink -f "${dev}"
+    local dev dir
+    for dir in $(aufs_readonly_branch "${1}"); do
+        dev="$(device_id_of_file "${dir}")"
+        case "${dev}" in
+            "")
+                continue
+                ;;
+            0:*)
+                # aufs mounts can't be nested; but this may be btrfs
+                dev="$(underlying_device_from_file "${dir}")"
+                ;;
+            *)
+                dev="$(device_node_from_major_minor "${dev}")"
+                ;;
+        esac
+        if [ -b "${dev}" ]; then
+            readlink -f "${dev}"
+            return 0
+        fi
+    done
+    return 1
 }
 # ===========================================================================}}}
 # underlying_device_from_overlayfs() ========================================{{{
